
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CommunityMemberScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  firstName: 'firstName',
  middleName: 'middleName',
  lastName: 'lastName',
  communityNickname: 'communityNickname',
  placeOfBirth: 'placeOfBirth',
  dateOfBirth: 'dateOfBirth',
  age: 'age',
  gender: 'gender',
  genderIdentity: 'genderIdentity',
  nik: 'nik',
  idScanUrl: 'idScanUrl',
  familyCardNumber: 'familyCardNumber',
  ektpStatus: 'ektpStatus',
  address: 'address',
  domicileKelurahan: 'domicileKelurahan',
  domicileKecamatan: 'domicileKecamatan',
  domicileRegencyCity: 'domicileRegencyCity',
  city: 'city',
  residencyStatus: 'residencyStatus',
  livingSituation: 'livingSituation',
  phoneNumber: 'phoneNumber',
  serviceContactPerson: 'serviceContactPerson',
  maritalStatus: 'maritalStatus',
  lastEducation: 'lastEducation',
  isStillStudying: 'isStillStudying',
  employmentStatus: 'employmentStatus',
  monthlyIncome: 'monthlyIncome',
  hasOwnBusiness: 'hasOwnBusiness',
  hasReceivedSkillTraining: 'hasReceivedSkillTraining',
  skillTrainingType: 'skillTrainingType',
  desiredSkillTraining: 'desiredSkillTraining',
  hasBpjs: 'hasBpjs',
  bpjsId: 'bpjsId',
  bpjsScanUrl: 'bpjsScanUrl',
  healthServiceAccess: 'healthServiceAccess',
  chronicIllness: 'chronicIllness',
  discriminationExperience: 'discriminationExperience',
  discriminationType: 'discriminationType',
  discriminationPerpetrator: 'discriminationPerpetrator',
  discriminationLocation: 'discriminationLocation',
  wasDiscriminationReported: 'wasDiscriminationReported',
  receivesSocialAssistance: 'receivesSocialAssistance',
  isRegisteredInDTKS: 'isRegisteredInDTKS',
  communityGroup: 'communityGroup',
  notes: 'notes'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Gender = exports.$Enums.Gender = {
  PRIA: 'PRIA',
  WANITA: 'WANITA'
};

exports.GenderIdentity = exports.$Enums.GenderIdentity = {
  NONE: 'NONE',
  WARIA: 'WARIA'
};

exports.EKTPStatus = exports.$Enums.EKTPStatus = {
  MEMILIKI: 'MEMILIKI',
  TIDAK_MEMILIKI: 'TIDAK_MEMILIKI',
  DALAM_PROSES: 'DALAM_PROSES'
};

exports.ResidencyStatus = exports.$Enums.ResidencyStatus = {
  PENDATANG: 'PENDATANG',
  PENDUDUK_TETAP: 'PENDUDUK_TETAP'
};

exports.LivingSituation = exports.$Enums.LivingSituation = {
  BERSAMA_ORANG_TUA: 'BERSAMA_ORANG_TUA',
  RUMAH_PRIBADI: 'RUMAH_PRIBADI',
  SEWA_KONTRAK: 'SEWA_KONTRAK'
};

exports.EducationLevel = exports.$Enums.EducationLevel = {
  SD: 'SD',
  SMP: 'SMP',
  SMA_SMK: 'SMA_SMK',
  PERGURUAN_TINGGI: 'PERGURUAN_TINGGI',
  TIDAK_SEKOLAH: 'TIDAK_SEKOLAH'
};

exports.HealthServiceAccess = exports.$Enums.HealthServiceAccess = {
  PUSKESMAS: 'PUSKESMAS',
  RUMAH_SAKIT: 'RUMAH_SAKIT',
  KLINIK: 'KLINIK',
  TIDAK_PERNAH: 'TIDAK_PERNAH'
};

exports.DiscriminationExperience = exports.$Enums.DiscriminationExperience = {
  TIDAK_PERNAH: 'TIDAK_PERNAH',
  PERNAH_MENGALAMI: 'PERNAH_MENGALAMI'
};

exports.Prisma.ModelName = {
  CommunityMember: 'CommunityMember'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
